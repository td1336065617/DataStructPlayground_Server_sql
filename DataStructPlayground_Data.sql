-- ************************************************************
--
-- close fk
--
-- skip


-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Application_Information`
--

DROP TABLE IF EXISTS `Application_Information`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Application_Information` (
  `Application_Information_id` int(11) NOT NULL AUTO_INCREMENT,
  `Question_Sheet_id` int(11) NOT NULL,
  `Account_id` int(11) NOT NULL,
  `creator_id` int(11) NOT NULL,
  `state` int(11) DEFAULT NULL COMMENT '0没处理1通过2拒绝',
  PRIMARY KEY (`Application_Information_id`),
  KEY `A` (`Question_Sheet_id`),
  KEY `b` (`Account_id`),
  KEY `C` (`creator_id`),
  CONSTRAINT `A` FOREIGN KEY (`Question_Sheet_id`) REFERENCES `Question_Sheet` (`Question_Sheet_id`),
  CONSTRAINT `C` FOREIGN KEY (`creator_id`) REFERENCES `user` (`Account_id`),
  CONSTRAINT `b` FOREIGN KEY (`Account_id`) REFERENCES `user` (`Account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Application_Information`
--

/*!40000 ALTER TABLE `Application_Information` DISABLE KEYS */;
INSERT INTO `Application_Information` VALUES (9,20,1,1,1),(10,48,1,1,1),(11,49,1,1,1),(12,50,1,1,1),(13,51,1,1,1),(14,52,1,1,1),(15,53,1,1,1),(16,54,1,1,1),(17,55,1,1,1),(18,56,1,1,1),(19,57,1,1,1);
/*!40000 ALTER TABLE `Application_Information` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:48
-- ************************************************************
--
-- close fk
--
-- skip


-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Question_Sheet`
--

DROP TABLE IF EXISTS `Question_Sheet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Question_Sheet` (
  `Question_Sheet_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '题单编号',
  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '题单名',
  `creator_id` int(11) NOT NULL COMMENT '题单创建者id',
  `Questions_list` varchar(600) NOT NULL DEFAULT '' COMMENT '题单内题目,分割',
  `open` int(11) NOT NULL DEFAULT '0' COMMENT '题单开放状态 1开放 2密码访问 3需要申请',
  `Open_use_id` varchar(1000) DEFAULT '' COMMENT '可以访问题单的用户的id串,分割',
  `password` varchar(30) DEFAULT '',
  `Public_status` int(11) DEFAULT '1' COMMENT '是否公开到课程展示页',
  `type` int(11) NOT NULL DEFAULT '1' COMMENT '1 题单 2课程 3关卡',
  `Course_introduction` varchar(5000) DEFAULT '' COMMENT '课程介绍',
  PRIMARY KEY (`Question_Sheet_id`),
  KEY `creator_id` (`creator_id`),
  CONSTRAINT `creator_id` FOREIGN KEY (`creator_id`) REFERENCES `user` (`Account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=utf8 COMMENT='题单信息';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Question_Sheet`
--

/*!40000 ALTER TABLE `Question_Sheet` DISABLE KEYS */;
INSERT INTO `Question_Sheet` VALUES (20,'2009192-数据结构与算法',1,'14,15',1,'1','',0,2,''),(21,'2009191-数据结构与算法',1,'',1,'','',0,2,''),(22,'前缀和',1,'14',1,'','',0,3,''),(23,'最短路',1,'',1,'','',0,2,''),(24,'高精度题单',1,'15',1,'','',0,1,''),(25,'高精度题单2',1,'15',1,'','',0,1,''),(26,'高精度题单3',1,'15',1,'','',0,1,''),(27,'数论',1,'14,16,17,18',1,'','',1,3,''),(28,'图论入门集合',1,'',1,'','',1,1,''),(29,'图论普及集合',1,'',1,'','',1,1,''),(30,'排序',1,'',1,'','',0,1,''),(31,'动态规划入门',1,'',1,'','',0,1,''),(32,'动态规划普及',1,'',1,'','',0,1,''),(33,'动态规划提高',1,'',1,'','',0,1,''),(34,'动态规划困难',1,'',1,'','',0,1,''),(35,'数论入门',1,'',1,'','',0,1,''),(36,'数论公开课',1,'',1,'','',1,2,''),(37,'图论公开课',1,'',1,'','',1,2,''),(38,'最小生成树公开课',1,'',1,'','',1,2,''),(39,'快速排序公开课',1,'',1,'','',1,2,''),(40,'归并排序公开课',1,'',1,'','',0,2,''),(41,'二分公开课',1,'',1,'','',1,2,''),(42,'高精度公开课',1,'',1,'','',1,2,''),(43,'双指针算法公开课',1,'',1,'','',1,2,''),(44,'匈牙利算法公开课',1,'',1,'','',1,2,''),(45,'二分图公开课',1,'',1,'','',1,2,''),(46,'拓扑排序公开课',1,'',1,'','',1,2,''),(47,' Huffman树 公开课',1,'',1,'','',1,2,''),(48,'2009193-数据结构与算法',1,'',3,'1','',0,2,''),(49,'2009194-数据结构与算法',1,'',3,'1','',0,2,''),(50,'2009195-数据结构与算法',1,'',3,'1','',0,2,''),(51,'2009196-数据结构与算法',1,'',3,'1','',0,2,''),(52,'2009197-数据结构与算法',1,'',3,'1','',0,2,''),(53,'2009198-数据结构与算法',1,'',3,'1','',0,2,''),(54,'2009199-数据结构与算法',1,'',3,'1','',0,2,''),(55,'2009200-数据结构与算法',1,'',3,'1','',0,2,''),(56,'2009201-数据结构与算法',1,'',3,'1','',0,2,''),(57,'2009202-数据结构与算法',1,'',3,'1','',0,2,''),(58,'2009203-数据结构与算法',1,'',3,'','',0,2,''),(59,'最短路',1,'40',1,'','',0,3,''),(60,'最小生成树',1,'39',1,'','',0,3,''),(61,'排序',1,'32,33',1,'','',0,3,''),(62,'字符串处理',1,'31',1,'','',0,3,''),(63,'经典背包算法',1,'',3,'','',0,2,''),(64,'经典背包算法',1,'41',1,'','',0,3,'');
/*!40000 ALTER TABLE `Question_Sheet` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:49
-- ************************************************************
--
-- close fk
--
-- skip


-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Question_Test_Information`
--

DROP TABLE IF EXISTS `Question_Test_Information`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Question_Test_Information` (
  `Test_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '测试编号',
  `Account_id` int(11) NOT NULL DEFAULT '0' COMMENT '提交帐号的id',
  `Question_id` int(11) NOT NULL DEFAULT '0' COMMENT '测试的题目的id',
  `Question_Sheet_id` int(11) DEFAULT '0' COMMENT '所属题单',
  `Test_status` int(11) DEFAULT '0' COMMENT '测试状态',
  `Testing_the_code` text NOT NULL COMMENT '测试代码',
  `Running_time` int(11) DEFAULT '0' COMMENT '运行时间（秒）',
  `Memory_footprint` int(11) DEFAULT '0' COMMENT '占用内存',
  `Code_length` int(11) NOT NULL COMMENT '代码长度',
  `Use_language` int(11) NOT NULL COMMENT '使用语言',
  `Commit_time` datetime NOT NULL COMMENT '提交时间',
  `Test_results` int(12) DEFAULT '0' COMMENT '测试结果',
  `Response_time` int(11) DEFAULT '0' COMMENT '作答用时',
  `Accuracy` double(5,2) unsigned DEFAULT '0.00' COMMENT '正确率',
  PRIMARY KEY (`Test_id`),
  KEY `Account_id` (`Account_id`),
  KEY `Question_id` (`Question_id`),
  CONSTRAINT `Account_id` FOREIGN KEY (`Account_id`) REFERENCES `user` (`Account_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Question_id` FOREIGN KEY (`Question_id`) REFERENCES `examination_questions` (`Question_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1180 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Question_Test_Information`
--

/*!40000 ALTER TABLE `Question_Test_Information` DISABLE KEYS */;
INSERT INTO `Question_Test_Information` VALUES (200,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:24',0,8280,1.00),(201,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:24',0,8280,1.00),(202,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:24',0,8280,1.00),(203,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:24',0,8280,1.00),(204,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:25',0,8280,1.00),(205,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:26',0,8280,1.00),(206,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:27',0,8280,1.00),(207,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:27',0,8280,1.00),(208,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:27',0,8280,1.00),(209,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:28',0,8280,1.00),(210,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:28',0,8280,1.00),(211,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:28',0,8280,1.00),(212,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:30',0,8280,1.00),(213,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:30',0,8280,1.00),(214,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:30',0,8280,1.00),(215,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:30',0,8280,1.00),(216,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:31',0,8280,1.00),(217,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:33',0,8280,1.00),(218,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:33',0,8280,1.00),(219,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:33',0,8280,1.00),(220,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:33',0,8280,1.00),(221,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:33',0,8280,1.00),(222,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:34',0,8280,1.00),(223,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:35',0,8280,1.00),(224,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:35',0,8280,1.00),(225,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:35',0,8280,1.00),(226,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:36',0,8280,1.00),(227,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:22:36',0,8280,1.00),(228,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:37',0,8280,1.00),(229,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:37',0,8280,1.00),(230,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:38',0,8280,1.00),(231,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:38',0,8280,1.00),(232,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:39',0,8280,1.00),(233,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:39',0,8280,1.00),(234,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:40',0,8280,1.00),(235,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:40',0,8280,1.00),(236,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:40',0,8280,1.00),(237,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:40',0,8280,1.00),(238,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:41',0,8280,1.00),(239,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:42',0,8280,1.00),(240,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:43',0,8280,1.00),(241,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:22:43',0,8280,1.00),(242,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:43',0,8280,1.00),(243,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:43',0,8280,1.00),(244,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:44',0,8280,1.00),(245,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:44',0,8280,1.00),(246,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:44',0,8280,1.00),(247,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:45',0,8280,1.00),(248,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:46',0,8280,1.00),(249,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:47',0,8280,1.00),(250,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:47',0,8280,1.00),(251,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:47',0,8280,1.00),(252,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:48',0,8280,1.00),(253,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:48',0,8280,1.00),(254,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:49',0,8280,1.00),(255,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:50',0,8280,1.00),(256,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:50',0,8280,1.00),(257,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:50',0,8280,1.00),(258,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:50',0,8280,1.00),(259,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:51',0,8280,1.00),(260,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:53',0,8280,1.00),(261,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:53',0,8280,1.00),(262,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:53',0,8280,1.00),(263,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:53',0,8280,1.00),(264,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:53',0,8280,1.00),(265,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:22:54',0,8280,1.00),(266,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:56',0,8280,1.00),(267,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:56',0,8280,1.00),(268,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:56',0,8280,1.00),(269,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:57',0,8280,1.00),(270,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:57',0,8280,1.00),(271,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:58',0,8280,1.00),(272,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:59',0,8280,1.00),(273,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:22:59',0,8280,1.00),(274,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:22:59',0,8280,1.00),(275,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:22:59',0,8280,1.00),(276,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:00',0,8280,1.00),(277,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:01',0,8280,1.00),(278,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:01',0,8280,1.00),(279,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:01',0,8280,1.00),(280,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:01',0,8280,1.00),(281,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:03',0,8280,1.00),(282,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:03',0,8280,1.00),(283,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:23:03',0,8280,1.00),(284,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:04',0,8280,1.00),(285,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:04',0,8280,1.00),(286,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:05',0,8280,1.00),(287,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:05',0,8280,1.00),(288,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:05',0,8280,1.00),(289,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:23:05',0,8280,1.00),(290,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:05',0,8280,1.00),(291,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:06',0,8280,1.00),(292,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:07',0,8280,1.00),(293,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:08',0,8280,1.00),(294,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:08',0,8280,1.00),(295,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:08',0,8280,1.00),(296,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:09',0,8280,1.00),(297,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:09',0,8280,1.00),(298,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:10',0,8280,1.00),(299,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:10',0,8280,1.00),(300,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:10',0,8280,1.00),(301,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:12',0,8280,1.00),(302,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:12',0,8280,1.00),(303,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:12',0,8280,1.00),(304,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:12',0,8280,1.00),(305,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:12',0,8280,1.00),(306,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:13',0,8280,1.00),(307,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:14',0,8280,1.00),(308,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:14',0,8280,1.00),(309,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:14',0,8280,1.00),(310,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:14',0,8280,1.00),(311,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:16',0,8280,1.00),(312,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:16',0,8280,1.00),(313,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:17',0,8280,1.00),(314,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:17',0,8280,1.00),(315,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:17',0,8280,1.00),(316,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:18',0,8280,1.00),(317,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:18',0,8280,1.00),(318,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:20',0,8280,1.00),(319,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:20',0,8280,1.00),(320,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:20',0,8280,1.00),(321,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:20',0,8280,1.00),(322,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:20',0,8280,1.00),(323,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:22',0,8280,1.00),(324,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:22',0,8280,1.00),(325,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:22',0,8280,1.00),(326,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:22',0,8280,1.00),(327,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:23',0,8280,1.00),(328,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:24',0,8280,1.00),(329,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:25',0,8280,1.00),(330,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:25',0,8280,1.00),(331,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:25',0,8280,1.00),(332,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:25',0,8280,1.00),(333,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:26',0,8280,1.00),(334,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:26',0,8280,1.00),(335,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:27',0,8280,1.00),(336,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:27',0,8280,1.00),(337,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:27',0,8280,1.00),(338,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:28',0,8280,1.00),(339,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:28',0,8280,1.00),(340,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:29',0,8280,1.00),(341,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:29',0,8280,1.00),(342,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:30',0,8280,1.00),(343,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:30',0,8280,1.00),(344,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:30',0,8280,1.00),(345,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:30',0,8280,1.00),(346,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:31',0,8280,1.00),(347,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:31',0,8280,1.00),(348,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:31',0,8280,1.00),(349,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:32',0,8280,1.00),(350,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:32',0,8280,1.00),(351,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:33',0,8280,1.00),(352,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:33',0,8280,1.00),(353,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:34',0,8280,1.00),(354,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:34',0,8280,1.00),(355,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:34',0,8280,1.00),(356,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:35',0,8280,1.00),(357,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:35',0,8280,1.00),(358,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:36',0,8280,1.00),(359,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:36',0,8280,1.00),(360,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:36',0,8280,1.00),(361,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:36',0,8280,1.00),(362,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:37',0,8280,1.00),(363,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:38',0,8280,1.00),(364,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:38',0,8280,1.00),(365,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:38',0,8280,1.00),(366,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:39',0,8280,1.00),(367,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:39',0,8280,1.00),(368,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:40',0,8280,1.00),(369,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:40',0,8280,1.00),(370,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:40',0,8280,1.00),(371,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:41',0,8280,1.00),(372,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:41',0,8280,1.00),(373,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:41',0,8280,1.00),(374,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:42',0,8280,1.00),(375,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:42',0,8280,1.00),(376,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:42',0,8280,1.00),(377,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:43',0,8280,1.00),(378,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:43',0,8280,1.00),(379,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:44',0,8280,1.00),(380,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:45',0,8280,1.00),(381,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:45',0,8280,1.00),(382,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:23:45',0,8280,1.00),(383,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:45',0,8280,1.00),(384,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:45',0,8280,1.00),(385,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:46',0,8280,1.00),(386,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:47',0,8280,1.00),(387,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:47',0,8280,1.00),(388,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:47',0,8280,1.00),(389,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:48',0,8280,1.00),(390,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:48',0,8280,1.00),(391,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:49',0,8280,1.00),(392,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:49',0,8280,1.00),(393,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:49',0,8280,1.00),(394,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:50',0,8280,1.00),(395,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:50',0,8280,1.00),(396,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:50',0,8280,1.00),(397,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:51',0,8280,1.00),(398,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:51',0,8280,1.00),(399,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:52',0,8280,1.00),(400,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:53',0,8280,1.00),(401,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:53',0,8280,1.00),(402,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:23:53',0,8280,1.00),(403,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:54',0,8280,1.00),(404,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:55',0,8280,1.00),(405,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:55',0,8280,1.00),(406,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:55',0,8280,1.00),(407,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:55',0,8280,1.00),(408,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:56',0,8280,1.00),(409,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:23:57',0,8280,1.00),(410,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:57',0,8280,1.00),(411,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:57',0,8280,1.00),(412,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:58',0,8280,1.00),(413,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:58',0,8280,1.00),(414,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:23:59',0,8280,1.00),(415,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:23:59',0,8280,1.00),(416,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:23:59',0,8280,1.00),(417,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:00',0,8280,1.00),(418,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:00',0,8280,1.00),(419,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:01',0,8280,1.00),(420,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:01',0,8280,1.00),(421,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:01',0,8280,1.00),(422,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:03',0,8280,1.00),(423,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:03',0,8280,1.00),(424,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:03',0,8280,1.00),(425,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:03',0,8280,1.00),(426,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:03',0,8280,1.00),(427,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:05',0,8280,1.00),(428,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:05',0,8280,1.00),(429,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:06',0,8280,1.00),(430,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:24:06',0,8280,1.00),(431,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:06',0,8280,1.00),(432,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:07',0,8280,1.00),(433,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:07',0,8280,1.00),(434,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:09',0,8280,1.00),(435,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:09',0,8280,1.00),(436,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:09',0,8280,1.00),(437,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:24:09',0,8280,1.00),(438,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:09',0,8280,1.00),(439,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:11',0,8280,1.00),(440,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:11',0,8280,1.00),(441,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:12',0,8280,1.00),(442,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:12',0,8280,1.00),(443,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:12',0,8280,1.00),(444,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:14',0,8280,1.00),(445,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:14',0,8280,1.00),(446,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:14',0,8280,1.00),(447,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:14',0,8280,1.00),(448,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:14',0,8280,1.00),(449,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:16',0,8280,1.00),(450,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:16',0,8280,1.00),(451,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:24:17',0,8280,1.00),(452,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:17',0,8280,1.00),(453,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:17',0,8280,1.00),(454,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:18',0,8280,1.00),(455,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:18',0,8280,1.00),(456,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:20',0,8280,1.00),(457,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:20',0,8280,1.00),(458,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:20',0,8280,1.00),(459,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:20',0,8280,1.00),(460,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:20',0,8280,1.00),(461,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:22',0,8280,1.00),(462,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:22',0,8280,1.00),(463,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:22',0,8280,1.00),(464,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:23',0,8280,1.00),(465,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:23',0,8280,1.00),(466,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:24',0,8280,1.00),(467,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:24',0,8280,1.00),(468,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:25',0,8280,1.00),(469,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:25',0,8280,1.00),(470,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:26',0,8280,1.00),(471,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:26',0,8280,1.00),(472,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:27',0,8280,1.00),(473,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:27',0,8280,1.00),(474,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:27',0,8280,1.00),(475,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:28',0,8280,1.00),(476,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:28',0,8280,1.00),(477,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:29',0,8280,1.00),(478,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:30',0,8280,1.00),(479,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:30',0,8280,1.00),(480,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:30',0,8280,1.00),(481,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:31',0,8280,1.00),(482,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:31',0,8280,1.00),(483,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:32',0,8280,1.00),(484,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:33',0,8280,1.00),(485,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:33',0,8280,1.00),(486,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:33',0,8280,1.00),(487,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:33',0,8280,1.00),(488,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:36',0,8280,1.00),(489,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:36',0,8280,1.00),(490,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:36',0,8280,1.00),(491,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:36',0,8280,1.00),(492,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:24:36',0,8280,1.00),(493,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:38',0,8280,1.00),(494,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:38',0,8280,1.00),(495,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:38',0,8280,1.00),(496,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:39',0,8280,1.00),(497,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',4,14464,2238,1,'2023-12-02 22:24:40',0,8280,1.00),(498,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:24:40',0,8280,1.00),(499,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:40',0,8280,1.00),(500,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:41',0,8280,1.00),(501,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:43',0,8280,1.00),(502,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:43',0,8280,1.00),(503,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:43',0,8280,1.00),(504,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:43',0,8280,1.00),(505,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:43',0,8280,1.00),(506,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:45',0,8280,1.00),(507,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:45',0,8280,1.00),(508,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:45',0,8280,1.00),(509,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:46',0,8280,1.00),(510,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:46',0,8280,1.00),(511,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:47',0,8280,1.00),(512,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:47',0,8280,1.00),(513,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:47',0,8280,1.00),(514,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:49',0,8280,1.00),(515,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:50',0,8280,1.00),(516,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:50',0,8280,1.00),(517,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:50',0,8280,1.00),(518,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:50',0,8280,1.00),(519,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:51',0,8280,1.00),(520,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:52',0,8280,1.00),(521,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:24:52',0,8280,1.00),(522,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:53',0,8280,1.00),(523,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:53',0,8280,1.00),(524,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:54',0,8280,1.00),(525,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:54',0,8280,1.00),(526,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:54',0,8280,1.00),(527,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:55',0,8280,1.00),(528,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:24:55',0,8280,1.00),(529,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:56',0,8280,1.00),(530,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:56',0,8280,1.00),(531,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:57',0,8280,1.00),(532,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:24:57',0,8280,1.00),(533,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:58',0,8280,1.00),(534,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:24:59',0,8280,1.00),(535,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:24:59',0,8280,1.00),(536,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:59',0,8280,1.00),(537,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:24:59',0,8280,1.00),(538,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:01',0,8280,1.00),(539,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:01',0,8280,1.00),(540,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:01',0,8280,1.00),(541,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:01',0,8280,1.00),(542,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:02',0,8280,1.00),(543,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:02',0,8280,1.00),(544,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:03',0,8280,1.00),(545,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:03',0,8280,1.00),(546,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:04',0,8280,1.00),(547,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:05',0,8280,1.00),(548,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:05',0,8280,1.00),(549,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:05',0,8280,1.00),(550,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:05',0,8280,1.00),(551,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:06',0,8280,1.00),(552,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:25:07',0,8280,1.00),(553,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:07',0,8280,1.00),(554,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:07',0,8280,1.00),(555,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:08',0,8280,1.00),(556,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:09',0,8280,1.00),(557,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:09',0,8280,1.00),(558,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:09',0,8280,1.00),(559,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:25:10',0,8280,1.00),(560,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:10',0,8280,1.00),(561,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:13',0,8280,1.00),(562,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:13',0,8280,1.00),(563,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:13',0,8280,1.00),(564,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:13',0,8280,1.00),(565,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:13',0,8280,1.00),(566,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:16',0,8280,1.00),(567,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:16',0,8280,1.00),(568,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:16',0,8280,1.00),(569,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:25:16',0,8280,1.00),(570,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:25:16',0,8280,1.00),(571,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:18',0,8280,1.00),(572,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:25:18',0,8280,1.00),(573,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:18',0,8280,1.00),(574,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:18',0,8280,1.00),(575,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:19',0,8280,1.00),(576,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:19',0,8280,1.00),(577,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:20',0,8280,1.00),(578,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:20',0,8280,1.00),(579,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:20',0,8280,1.00),(580,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:21',0,8280,1.00),(581,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:22',0,8280,1.00),(582,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:22',0,8280,1.00),(583,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:22',0,8280,1.00),(584,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:23',0,8280,1.00),(585,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:24',0,8280,1.00),(586,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:24',0,8280,1.00),(587,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:25',0,8280,1.00),(588,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:25',0,8280,1.00),(589,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:25',0,8280,1.00),(590,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:26',0,8280,1.00),(591,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:25:26',0,8280,1.00),(592,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:25:28',0,8280,1.00),(593,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:28',0,8280,1.00),(594,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:25:28',0,8280,1.00),(595,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:28:14',0,13977,1.00),(596,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:29:13',0,13977,1.00),(597,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:30:00',0,13977,1.00),(598,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:32:31',0,13977,1.00),(599,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:39',0,13977,1.00),(600,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:39',0,13977,1.00),(601,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:33:39',0,13977,1.00),(602,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:40',0,13977,1.00),(603,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:40',0,13977,1.00),(604,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:42',0,13977,1.00),(605,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:42',0,13977,1.00),(606,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:42',0,13977,1.00),(607,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:42',0,13977,1.00),(608,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:42',0,13977,1.00),(609,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:43',0,13977,1.00),(610,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:43',0,13977,1.00),(611,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:44',0,13977,1.00),(612,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:44',0,13977,1.00),(613,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:44',0,13977,1.00),(614,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:45',0,13977,1.00),(615,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:45',0,13977,1.00),(616,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:33:45',0,13977,1.00),(617,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:46',0,13977,1.00),(618,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:46',0,13977,1.00),(619,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:33:46',0,13977,1.00),(620,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:47',0,13977,1.00),(621,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:47',0,13977,1.00),(622,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:48',0,13977,1.00),(623,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:48',0,13977,1.00),(624,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:48',0,13977,1.00),(625,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:48',0,13977,1.00),(626,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:49',0,13977,1.00),(627,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:49',0,13977,1.00),(628,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:49',0,13977,1.00),(629,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:50',0,13977,1.00),(630,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:50',0,13977,1.00),(631,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:51',0,13977,1.00),(632,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:51',0,13977,1.00),(633,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:51',0,13977,1.00),(634,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:51',0,13977,1.00);
INSERT INTO `Question_Test_Information` VALUES (635,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:52',0,13977,1.00),(636,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:52',0,13977,1.00),(637,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:53',0,13977,1.00),(638,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:53',0,13977,1.00),(639,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:53',0,13977,1.00),(640,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:33:53',0,13977,1.00),(641,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:54',0,13977,1.00),(642,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:54',0,13977,1.00),(643,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:55',0,13977,1.00),(644,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:55',0,13977,1.00),(645,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:55',0,13977,1.00),(646,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:56',0,13977,1.00),(647,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:56',0,13977,1.00),(648,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:57',0,13977,1.00),(649,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:33:57',0,13977,1.00),(650,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:57',0,13977,1.00),(651,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:57',0,13977,1.00),(652,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:33:58',0,13977,1.00),(653,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:58',0,13977,1.00),(654,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:33:59',0,13977,1.00),(655,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:33:59',0,13977,1.00),(656,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:59',0,13977,1.00),(657,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:33:59',0,13977,1.00),(658,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:00',0,13977,1.00),(659,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:00',0,13977,1.00),(660,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:01',0,13977,1.00),(661,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:01',0,13977,1.00),(662,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:01',0,13977,1.00),(663,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:02',0,13977,1.00),(664,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:34:02',0,13977,1.00),(665,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:02',0,13977,1.00),(666,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:03',0,13977,1.00),(667,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:03',0,13977,1.00),(668,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:03',0,13977,1.00),(669,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:04',0,13977,1.00),(670,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:04',0,13977,1.00),(671,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:05',0,13977,1.00),(672,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:05',0,13977,1.00),(673,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:05',0,13977,1.00),(674,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:05',0,13977,1.00),(675,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:06',0,13977,1.00),(676,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:06',0,13977,1.00),(677,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:07',0,13977,1.00),(678,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:07',0,13977,1.00),(679,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:08',0,13977,1.00),(680,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:08',0,13977,1.00),(681,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:08',0,13977,1.00),(682,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:09',0,13977,1.00),(683,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:09',0,13977,1.00),(684,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:09',0,13977,1.00),(685,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:10',0,13977,1.00),(686,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:10',0,13977,1.00),(687,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:10',0,13977,1.00),(688,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:11',0,13977,1.00),(689,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:11',0,13977,1.00),(690,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:12',0,13977,1.00),(691,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:12',0,13977,1.00),(692,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:13',0,13977,1.00),(693,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:13',0,13977,1.00),(694,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:13',0,13977,1.00),(695,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:14',0,13977,1.00),(696,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:14',0,13977,1.00),(697,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:15',0,13977,1.00),(698,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:15',0,13977,1.00),(699,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:15',0,13977,1.00),(700,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:16',0,13977,1.00),(701,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:16',0,13977,1.00),(702,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:17',0,13977,1.00),(703,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:18',0,13977,1.00),(704,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:18',0,13977,1.00),(705,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:18',0,13977,1.00),(706,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:18',0,13977,1.00),(707,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:18',0,13977,1.00),(708,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:19',0,13977,1.00),(709,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:20',0,13977,1.00),(710,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:20',0,13977,1.00),(711,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:21',0,13977,1.00),(712,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:21',0,13977,1.00),(713,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:21',0,13977,1.00),(714,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:21',0,13977,1.00),(715,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:22',0,13977,1.00),(716,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:22',0,13977,1.00),(717,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:23',0,13977,1.00),(718,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:23',0,13977,1.00),(719,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:23',0,13977,1.00),(720,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:24',0,13977,1.00),(721,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:24',0,13977,1.00),(722,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:25',0,13977,1.00),(723,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:25',0,13977,1.00),(724,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:26',0,13977,1.00),(725,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:26',0,13977,1.00),(726,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:26',0,13977,1.00),(727,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:34:27',0,13977,1.00),(728,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:27',0,13977,1.00),(729,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:28',0,13977,1.00),(730,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:28',0,13977,1.00),(731,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:28',0,13977,1.00),(732,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:29',0,13977,1.00),(733,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:29',0,13977,1.00),(734,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:29',0,13977,1.00),(735,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:30',0,13977,1.00),(736,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:30',0,13977,1.00),(737,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:30',0,13977,1.00),(738,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:31',0,13977,1.00),(739,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:31',0,13977,1.00),(740,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:32',0,13977,1.00),(741,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:32',0,13977,1.00),(742,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:32',0,13977,1.00),(743,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:33',0,13977,1.00),(744,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:33',0,13977,1.00),(745,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:33',0,13977,1.00),(746,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:34',0,13977,1.00),(747,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:34',0,13977,1.00),(748,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:35',0,13977,1.00),(749,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:35',0,13977,1.00),(750,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:35',0,13977,1.00),(751,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:36',0,13977,1.00),(752,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:36',0,13977,1.00),(753,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:36',0,13977,1.00),(754,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:36',0,13977,1.00),(755,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:37',0,13977,1.00),(756,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:37',0,13977,1.00),(757,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:38',0,13977,1.00),(758,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:38',0,13977,1.00),(759,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:38',0,13977,1.00),(760,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:39',0,13977,1.00),(761,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:39',0,13977,1.00),(762,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:39',0,13977,1.00),(763,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:34:40',0,13977,1.00),(764,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:40',0,13977,1.00),(765,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:40',0,13977,1.00),(766,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:41',0,13977,1.00),(767,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:41',0,13977,1.00),(768,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:42',0,13977,1.00),(769,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:42',0,13977,1.00),(770,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:42',0,13977,1.00),(771,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:43',0,13977,1.00),(772,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:43',0,13977,1.00),(773,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:43',0,13977,1.00),(774,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:44',0,13977,1.00),(775,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:44',0,13977,1.00),(776,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:45',0,13977,1.00),(777,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:45',0,13977,1.00),(778,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:45',0,13977,1.00),(779,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:45',0,13977,1.00),(780,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:46',0,13977,1.00),(781,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:34:46',0,13977,1.00),(782,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:47',0,13977,1.00),(783,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:47',0,13977,1.00),(784,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:47',0,13977,1.00),(785,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:48',0,13977,1.00),(786,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:48',0,13977,1.00),(787,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:48',0,13977,1.00),(788,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:49',0,13977,1.00),(789,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:49',0,13977,1.00),(790,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:34:50',0,13977,1.00),(791,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:50',0,13977,1.00),(792,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:50',0,13977,1.00),(793,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:51',0,13977,1.00),(794,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:51',0,13977,1.00),(795,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:52',0,13977,1.00),(796,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:52',0,13977,1.00),(797,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:52',0,13977,1.00),(798,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:52',0,13977,1.00),(799,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:53',0,13977,1.00),(800,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:53',0,13977,1.00),(801,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:54',0,13977,1.00),(802,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:54',0,13977,1.00),(803,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:55',0,13977,1.00),(804,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:55',0,13977,1.00),(805,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:55',0,13977,1.00),(806,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:55',0,13977,1.00),(807,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:56',0,13977,1.00),(808,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:56',0,13977,1.00),(809,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:57',0,13977,1.00),(810,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:34:57',0,13977,1.00),(811,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:34:59',0,13977,1.00),(812,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:34:59',0,13977,1.00),(813,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:34:59',0,13977,1.00),(814,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:00',0,13977,1.00),(815,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:01',0,13977,1.00),(816,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:02',0,13977,1.00),(817,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:35:02',0,13977,1.00),(818,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:03',0,13977,1.00),(819,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:04',0,13977,1.00),(820,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:04',0,13977,1.00),(821,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:05',0,13977,1.00),(822,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:05',0,13977,1.00),(823,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:35:06',0,13977,1.00),(824,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:07',0,13977,1.00),(825,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:08',0,13977,1.00),(826,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:08',0,13977,1.00),(827,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:09',0,13977,1.00),(828,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:35:09',0,13977,1.00),(829,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:35:10',0,13977,1.00),(830,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:11',0,13977,1.00),(831,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:11',0,13977,1.00),(832,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:12',0,13977,1.00),(833,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:35:12',0,13977,1.00),(834,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:13',0,13977,1.00),(835,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:14',0,13977,1.00),(836,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:14',0,13977,1.00),(837,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:15',0,13977,1.00),(838,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:16',0,13977,1.00),(839,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:16',0,13977,1.00),(840,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:17',0,13977,1.00),(841,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:35:17',0,13977,1.00),(842,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:18',0,13977,1.00),(843,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:19',0,13977,1.00),(844,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:35:19',0,13977,1.00),(845,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:20',0,13977,1.00),(846,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:35:21',0,13977,1.00),(847,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:35:21',0,13977,1.00),(848,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:35:22',0,13977,1.00),(849,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:42',0,13977,1.00),(850,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:39:42',0,13977,1.00),(851,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:42',0,13977,1.00),(852,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:43',0,13977,1.00),(853,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:43',0,13977,1.00),(854,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:46',0,13977,1.00),(855,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:46',0,13977,1.00),(856,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:46',0,13977,1.00),(857,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:46',0,13977,1.00),(858,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:46',0,13977,1.00),(859,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:49',0,13977,1.00),(860,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:49',0,13977,1.00),(861,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:49',0,13977,1.00),(862,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:49',0,13977,1.00),(863,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:49',0,13977,1.00),(864,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:39:52',0,13977,1.00),(865,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:52',0,13977,1.00),(866,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:52',0,13977,1.00),(867,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:53',0,13977,1.00),(868,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:39:53',0,13977,1.00),(869,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:54',0,13977,1.00),(870,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:55',0,13977,1.00),(871,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:39:55',0,13977,1.00),(872,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:56',0,13977,1.00),(873,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:39:56',0,13977,1.00),(874,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:57',0,13977,1.00),(875,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:58',0,13977,1.00),(876,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:58',0,13977,1.00),(877,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:39:58',0,13977,1.00),(878,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:39:59',0,13977,1.00),(879,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:00',0,13977,1.00),(880,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:01',0,13977,1.00),(881,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:01',0,13977,1.00),(882,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:01',0,13977,1.00),(883,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:40:02',0,13977,1.00),(884,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:03',0,13977,1.00),(885,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:03',0,13977,1.00),(886,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:04',0,13977,1.00),(887,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:04',0,13977,1.00),(888,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:04',0,13977,1.00),(889,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:05',0,13977,1.00),(890,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:06',0,13977,1.00),(891,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:06',0,13977,1.00),(892,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:07',0,13977,1.00),(893,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:07',0,13977,1.00),(894,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:08',0,13977,1.00),(895,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:09',0,13977,1.00),(896,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:09',0,13977,1.00),(897,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:10',0,13977,1.00),(898,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:10',0,13977,1.00),(899,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:11',0,13977,1.00),(900,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:12',0,13977,1.00),(901,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:12',0,13977,1.00),(902,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:13',0,13977,1.00),(903,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:13',0,13977,1.00),(904,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:13',0,13977,1.00),(905,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:14',0,13977,1.00),(906,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:15',0,13977,1.00),(907,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:16',0,13977,1.00),(908,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:16',0,13977,1.00),(909,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:16',0,13977,1.00),(910,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:17',0,13977,1.00),(911,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:18',0,13977,1.00),(912,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:18',0,13977,1.00),(913,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:19',0,13977,1.00),(914,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:19',0,13977,1.00),(915,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:40:20',0,13977,1.00),(916,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:21',0,13977,1.00),(917,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:21',0,13977,1.00),(918,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:22',0,13977,1.00),(919,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:22',0,13977,1.00),(920,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:23',0,13977,1.00),(921,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:24',0,13977,1.00),(922,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:24',0,13977,1.00),(923,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:25',0,13977,1.00),(924,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:25',0,13977,1.00),(925,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:25',0,13977,1.00),(926,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:27',0,13977,1.00),(927,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:27',0,13977,1.00),(928,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:28',0,13977,1.00),(929,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:28',0,13977,1.00),(930,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:28',0,13977,1.00),(931,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:30',0,13977,1.00),(932,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:30',0,13977,1.00),(933,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:31',0,13977,1.00),(934,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:31',0,13977,1.00),(935,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:31',0,13977,1.00),(936,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:32',0,13977,1.00),(937,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:33',0,13977,1.00),(938,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:34',0,13977,1.00),(939,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:34',0,13977,1.00),(940,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:35',0,13977,1.00),(941,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:35',0,13977,1.00),(942,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:36',0,13977,1.00),(943,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:37',0,13977,1.00),(944,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:37',0,13977,1.00),(945,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:38',0,13977,1.00),(946,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:38',0,13977,1.00),(947,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:39',0,13977,1.00),(948,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:40',0,13977,1.00),(949,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:40',0,13977,1.00),(950,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:41',0,13977,1.00),(951,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:41',0,13977,1.00),(952,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:41',0,13977,1.00),(953,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:43',0,13977,1.00),(954,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:43',0,13977,1.00),(955,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:43',0,13977,1.00),(956,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:44',0,13977,1.00),(957,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:40:44',0,13977,1.00),(958,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:46',0,13977,1.00),(959,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:46',0,13977,1.00),(960,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:47',0,13977,1.00),(961,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:47',0,13977,1.00),(962,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:47',0,13977,1.00),(963,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:49',0,13977,1.00),(964,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:49',0,13977,1.00),(965,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:50',0,13977,1.00),(966,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:40:50',0,13977,1.00),(967,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:51',0,13977,1.00),(968,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:51',0,13977,1.00),(969,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:52',0,13977,1.00),(970,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:53',0,13977,1.00),(971,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:54',0,13977,1.00),(972,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:54',0,13977,1.00),(973,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:54',0,13977,1.00),(974,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:55',0,13977,1.00),(975,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:57',0,13977,1.00),(976,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:40:57',0,13977,1.00),(977,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:40:58',0,13977,1.00),(978,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:40:58',0,13977,1.00),(979,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:40:58',0,13977,1.00),(980,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:00',0,13977,1.00),(981,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:00',0,13977,1.00),(982,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:41:00',0,13977,1.00),(983,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:41:01',0,13977,1.00),(984,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:41:01',0,13977,1.00),(985,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:41:02',0,13977,1.00),(986,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:03',0,13977,1.00),(987,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:03',0,13977,1.00),(988,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:41:04',0,13977,1.00),(989,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:05',0,13977,1.00),(990,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14464,2238,1,'2023-12-02 22:41:05',0,13977,1.00),(991,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14720,2238,1,'2023-12-02 22:41:06',0,13977,1.00),(992,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:06',0,13977,1.00),(993,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:41:07',0,13977,1.00),(994,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,14720,2238,1,'2023-12-02 22:41:08',0,13977,1.00),(995,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14464,2238,1,'2023-12-02 22:41:08',0,13977,1.00),(996,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:09',0,13977,1.00),(997,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',2,14720,2238,1,'2023-12-02 22:41:09',0,13977,1.00),(998,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:10',0,13977,1.00),(999,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14464,2238,1,'2023-12-02 22:41:11',0,13977,1.00),(1113,1,14,27,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',4,13952,2034,1,'2023-12-09 23:13:33',0,5593,1.00),(1114,1,14,22,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',3,13952,2034,1,'2023-12-09 23:27:35',0,2992,1.00),(1115,1,14,0,0,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2238,1,'2023-12-16 13:20:45',0,9933,0.00),(1116,1,14,0,0,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2238,1,'2023-12-16 13:22:11',0,2928,0.00),(1117,1,14,0,0,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2238,1,'2023-12-16 13:22:26',0,2506,0.00),(1119,1,14,0,8,'system',0,0,6,1,'2023-12-16 13:40:56',0,7576,0.00),(1120,1,14,0,8,'\"system\"',0,0,8,1,'2023-12-16 13:47:04',0,23467,0.00),(1121,1,14,0,8,'\"system\"',0,0,8,1,'2023-12-16 13:49:15',0,71974,0.00),(1122,1,14,0,8,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint ain()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2033,1,'2023-12-16 13:49:39',0,95751,0.00),(1123,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14336,2034,1,'2023-12-16 13:50:03',0,119983,1.00),(1124,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14216,2034,1,'2023-12-16 14:20:11',0,40446,1.00),(1125,1,14,0,8,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	ci >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2033,1,'2023-12-16 14:20:24',0,53518,0.00),(1126,1,14,0,8,'',0,0,0,1,'2023-12-16 14:24:50',0,172,0.00),(1127,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14784,2034,1,'2023-12-16 14:25:24',0,34185,1.00),(1128,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14796,2034,1,'2023-12-16 14:30:15',0,97593,1.00),(1129,1,14,0,8,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = ant[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2033,1,'2023-12-16 14:30:21',0,103840,0.00),(1130,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14800,2034,1,'2023-12-16 14:31:24',0,166221,1.00),(1131,1,14,0,8,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = um % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',0,0,2033,1,'2023-12-16 14:33:16',0,278855,0.00),(1132,1,14,0,1,'#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\nstring a , b;\nstring aint , adou , bint , bdou;\nint res_int[N] , res_dou[N];\nstring res_a , res_b;\n\nvoid f_int(int flag)\n{\n	int tx[N] = {0} , ty[N] = {0};\n	for(int i = aint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		tx[j] = aint[i] - @danyin0@danyin;\n	for(int i = bint.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n		ty[j] = bint[i] - @danyin0@danyin;\n	int tt = 0;\n	if(flag)\n		tt = 1;\n	for(int i = 0 ; i < (int)max(aint.size() , bint.size()) ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_int[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = max(aint.size() , bint.size());\n	if(tt)\n	{\n		res_int[k] = 1;\n		for(int i = k ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	}\n	else\n		for(int i = k - 1 ; i >= 0 ; i--)\n			res_a += res_int[i] + @danyin0@danyin;\n	return;\n}\n\nint f_dou()\n{\n	int tx[N] = {0} , ty[N] = {0};\n	if(adou.size() > bdou.size())\n	{\n		int len = int(adou.size() - bdou.size());\n		for(int i = 0 ; i < len ; i++)\n			bdou += @danyin0@danyin;\n	}\n		\n	else if(adou.size() < bdou.size())\n	{\n		int len = int(bdou.size() - adou.size());\n		for(int i = 0 ; i < len ; i++)\n			adou += @danyin0@danyin;\n	}\n		\n	for(int i = (int)adou.size() - 1 , j = 0 ; i >= 0 ; i-- , j ++)\n	{\n		tx[j] = adou[i] - @danyin0@danyin;\n		ty[j] = bdou[i] - @danyin0@danyin;\n	}\n	int tt = 0;\n	for(int i = 0 ; i < (int)adou.size() ; i++)\n	{\n		int sum = (tx[i] + ty[i] + tt);\n		res_dou[i] = sum % 10;\n		tt = sum / 10;\n	}\n	int k = adou.size();\n	for(int i = k - 1 ; i >= 0 ; i --)\n		res_b += res_dou[i] + @danyin0@danyin;\n	if(tt)\n		return 1;\n	else\n		return 0;\n}\n\nint main()\n{\n	cin >> a >> b;\n	aint += a.substr(0 , a.find(@danyin.@danyin)) , adou += a.substr(a.find(@danyin.@danyin) + 1 , a.size() - a.find(@danyin.@danyin));\n	bint += b.substr(0 , b.find(@danyin.@danyin)) , bdou += b.substr(b.find(@danyin.@danyin) + 1 , b.size() - b.find(@danyin.@danyin));\n	f_int(f_dou());\n	int t = 0;\n	for(int i = res_b.size() - 1 ; i >= 0 ; i --)\n	{\n		if(res_b[i] == @danyin0@danyin)\n			t ++;\n		else\n			break;\n	}\n	cout << res_a << @danyin.@danyin;\n	if(res_b.size() - t == 0) cout << 0;\n	for(int i = 0 ; i < int(res_b.size() - t) ; i++)\n		cout << res_b[i];\n}',1,14808,2034,1,'2023-12-16 14:34:01',0,323990,1.00),(1133,1,14,0,8,'',0,0,0,1,'2023-12-26 22:57:48',0,4571,0.00),(1134,1,14,0,8,'',0,0,0,1,'2023-12-26 22:57:51',0,7702,0.00),(1135,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1823,1,'2024-01-10 18:13:24',0,17510,0.00),(1136,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',4,14208,1823,1,'2024-01-10 18:15:01',0,114341,1.00),(1137,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',3,14208,1823,1,'2024-01-10 18:19:45',0,398297,1.00),(1138,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:18:02',0,2655,0.00),(1139,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:18:25',0,25709,0.00),(1140,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14080,1847,1,'2024-01-15 15:18:45',0,45874,1.00),(1141,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:18:53',0,54316,0.00),(1142,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:18:59',0,59496,0.00),(1143,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:19:03',0,64242,0.00),(1144,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:19:08',0,69051,0.00),(1145,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',3,14208,1847,1,'2024-01-15 15:21:01',0,181785,1.00),(1146,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:21:56',0,236654,1.00),(1147,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14208,1847,1,'2024-01-15 15:24:10',0,370977,1.00),(1148,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14208,1847,1,'2024-01-15 15:24:40',0,400729,1.00),(1149,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',3,14208,1847,1,'2024-01-15 15:24:46',0,406647,1.00),(1150,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:24:50',0,411225,0.00),(1151,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:26:05',0,485594,1.00),(1152,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:26:08',0,488989,1.00),(1153,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:26:13',0,493667,1.00),(1154,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:26:17',0,498167,0.00),(1155,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14208,1847,1,'2024-01-15 15:28:37',0,638168,1.00),(1156,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:28:57',0,658009,0.00),(1157,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:29:44',0,704689,1.00),(1158,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:29:55',0,715912,1.00),(1159,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14208,1847,1,'2024-01-15 15:30:07',0,728482,1.00),(1160,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:32:48',0,888880,0.00),(1161,1,48,0,3,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 15:35:03',0,1024166,0.00),(1162,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14336,1847,1,'2024-01-15 15:35:28',0,1049453,1.00),(1163,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14336,1847,1,'2024-01-15 15:35:53',0,1073895,1.00),(1164,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14336,1847,1,'2024-01-15 15:35:57',0,1078457,1.00),(1165,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14336,1847,1,'2024-01-15 15:36:03',0,1083554,1.00),(1166,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14336,1847,1,'2024-01-15 15:36:10',0,1090990,1.00),(1167,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14336,1847,1,'2024-01-15 15:36:15',0,1096320,1.00),(1168,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14336,1847,1,'2024-01-15 15:36:22',0,1102617,1.00),(1169,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,13952,1847,1,'2024-01-15 16:00:19',0,2540432,1.00),(1170,1,48,0,0,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 16:00:25',0,2546116,0.00),(1171,1,48,0,-653754880,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,13824,1847,1,'2024-01-15 16:04:08',0,21014,0.00),(1172,1,48,0,-653754880,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14208,1847,1,'2024-01-15 16:04:19',0,32650,0.00),(1173,1,48,0,0,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',0,0,1847,1,'2024-01-15 16:05:18',0,91777,0.00),(1174,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',3,14080,1847,1,'2024-01-15 21:02:28',0,2437,1.00),(1175,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',3,14592,1847,1,'2024-01-15 21:02:45',0,19550,1.00),(1176,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14592,1847,1,'2024-01-15 21:05:36',0,80775,1.00),(1177,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14592,1847,1,'2024-01-15 21:05:41',0,86093,1.00),(1178,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',2,14592,1847,1,'2024-01-15 21:05:46',0,90592,1.00),(1179,1,48,0,1,'#include<bits/stdc++.h>\nusing namespace std;\nlong long int n, m, t[500][500], sj[500],T,num,R,Q;\nlong long int mod1= 1610612741;\nstring str;\nlong long int f[1000000],p[1000000];\nlong long int sc[100000];\nvoid floy(int k) {\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = min(t[i][k] + t[k][j], t[i][j]);\n		}\n	}\n}\nstring s,s1;\nint main() {\n \n	cin >> n >> m>>T>>R>>Q;\n\n	for (int i = 0; i < n; i++)\n	{\n		for (int j = 0; j < n; j++)\n		{\n			t[i][j] = 1e17;\n		}\n	}\n	for (int i = 0; i < n; i++)\n		t[i][i] = 0;\n	for (int i = 0; i < n; i++)\n	{\n		cin >> sj[i];\n	}\n\n	cin >> s;\n	p[0] = 1;\n	for (int i = 1; i <= s.length(); i++)\n	{\n		f[i] = (f[i - 1] * 131 + (s[i - 1] - @danyina@danyin + 1)) % mod1;\n		p[i] = (p[i - 1] * 131) % mod1;\n	}\n	for (int i = 0; i < T; i++)\n	{\n		long long int f1=0;\n		cin >>s1;\n		for (int j = 1; j <= s1.length(); j++)\n		{\n			f1 = (f1 * 131 + (s1[j - 1] - @danyina@danyin + 1)) % mod1;\n		}\n		for (int j = s1.length(); j <= s.length(); j++)\n		{\n			int r1 = j, l1 = j - s1.length();\n			int r2 = s1.length(), l2 = 0;\n			long long int qz = ((f[r1] - f[l1] * p[r1 - l1]) % mod1 + mod1) % mod1;\n			long long int qzq = (f1 % mod1 + mod1) % mod1;\n			if (qz == qzq)\n			{\n				sc[i]++;\n			}\n		}\n	}\n	for (int i = 0; i < m; i++)\n	{\n		long long int qd, zd, qz;\n		cin >> qd >> zd >> qz;\n		t[qd][zd] = t[zd][qd] = min(qz,t[zd][qd]);\n	}\n	long long int up = 0;\n	for (int i = 0; i < Q; i++)\n	{\n		long long int qd, zd, tz;\n		cin >> qd >> zd >> tz;\n		while (sj[up] <= tz && up < n) {\n			floy(up);\n			up++;\n		}\n		if (sj[qd] <= tz && sj[zd] <= tz)\n		{\n			if (t[qd][zd] == 1e17)num-=T;\n			else\n			{\n				if (num > 0 && num + sc[t[qd][zd] % T] < 0)\n					return -1;\n				num+=sc[t[qd][zd]%T];\n				\n			}\n		}\n		else\n		{\n			num -= T;\n		}\n	}\n	if (num>R)\n	{\n		cout << \"YES\" << endl;\n	}\n	else\n	{\n		cout << \"NO\" << endl;\n	}\n	cout <<num;\n}',1,14592,1847,1,'2024-01-15 21:05:49',0,93630,1.00);
/*!40000 ALTER TABLE `Question_Test_Information` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:50
-- ************************************************************
--
-- close fk
--
-- skip


-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `examination_questions`
--

DROP TABLE IF EXISTS `examination_questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `examination_questions` (
  `Question_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '题目编号',
  `Title_Title` varchar(255) NOT NULL DEFAULT '' COMMENT '题目标题',
  `Question_Difficulty` varchar(255) NOT NULL DEFAULT '' COMMENT '题目难度',
  `The_topic_knowledge_point_label` varchar(255) NOT NULL DEFAULT '' COMMENT '题目知识点标签',
  `Background_of_Topic` text NOT NULL COMMENT '题目背景',
  `Description_of_Problem` text NOT NULL COMMENT '题目描述',
  `Input_description` text NOT NULL COMMENT '输入描述',
  `Output_Description` text NOT NULL COMMENT '输出描述',
  `Sample_input` text NOT NULL COMMENT '样例输入',
  `Sample_output` text NOT NULL COMMENT '样例输出',
  `Time_limit_for_each_test` int(11) NOT NULL DEFAULT '1000' COMMENT '运行时间 默认1000ms',
  `Memory_limit_per_test` int(11) NOT NULL DEFAULT '128' COMMENT '最大运行内存 默认128mb',
  `creator_id` int(11) DEFAULT NULL COMMENT '题目创建者',
  `Input_data` text COMMENT '输入数据',
  `Output_data` text COMMENT '输出数据',
  PRIMARY KEY (`Question_id`),
  KEY `cccc` (`creator_id`),
  CONSTRAINT `cccc` FOREIGN KEY (`creator_id`) REFERENCES `user` (`Account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `examination_questions`
--

/*!40000 ALTER TABLE `examination_questions` DISABLE KEYS */;
INSERT INTO `examination_questions` VALUES (14,'高精度小数求和','入门','高精度','小泽同学在学过高精度加法之后经过了很多次的练习，奇发异想\n有没有高精度小数加法？？？并且  Python 和  Java 都有高精度，但是由于有精度的限制无法计算。你能够解决吗？？？ ','小泽同学在学过高精度加法之后经过了很多次的练习，奇发异想\n有没有高精度小数加法？？？并且  Python 和  Java 都有高精度，但是由于有精度的限制无法计算。你能够解决吗？？？ ','一行两个小数 a , b;','一个数，表示和;','1.000000002\n20000000000000.1','1.000000002\n20000000000000.1',1000,128,1,'8888888888888888888.88888888888888888888\n9999999999999999999.99999999025366555512','18888888888888888888.888888879142554444'),(15,'阶乘之前缀和','入门','前缀和','无','5的阶乘是1 X 2 X 3 X 4 X 5 = 120，表示为5！\n\n现在有一个n个数的序列nums[n]，有x次询问(编号从1开始)，每行询问包括两个数，a，b。每次需要将询问的区间内数的阶乘进行相加（区间即使重合，也需相加），最后输出相加后的数。\n','第一行两个数，n，x；\n第二行n个数，表示一个序列nums[n]；\n接下来x行，表示x次询问，每行询问包括两个数，a，b;\n\n1 ≤ n,m ≤ 1000;\nn 个数中每个 1 ≤ nums[i] ≤ 15;\n m 个询问中 1 ≤ a ≤ b ≤ n;','一个数。','3 3\n1 3 5\n1 2\n2 3\n1 3','3 3\n1 3 5\n1 2\n2 3\n1 3',1000,128,1,'10 0\n1 1 1 1 1 1 1 1 1 1','0'),(16,'找质数','入门','数论',' 现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；\n','现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；','第一行两个数n ， k；\n接下来k行，每行一个数x；\n1 ≤ n,x ≤ 10⁶;\n1 ≤ k ≤ 100;','一共k行，yes或no；','5 5\n1 2 3 4 5','5 5\n1 2 3 4 5',1000,128,1,'5000 100\n9692 7348 7687 21293 2124 11113 31255 10160 19695 8771 9599 23244 25555 23589 20077 26000 5923 6819 4077 5983 22275 12891 15608 17638 31932 20872 23725 25425 18713 5332 15326 25535 8721 24174 14286 25331 21413 9053 9785 332 22540 8980 32405 30455 27406 15686 10392 14435 27822 23035 5114 16117 22283 6116 32124 18942 19336 13547 1321 11242 31531 25871 31196 30650 28227 2927 32258 8884 28494 2468 27041 28248 7449 6484 3482 11927 26665 25604 15403 16448 32602 19758 15031 17339 28614 8852 202 28665 31720 9939 26712 4523 28162 10811 13125 2738 27067 9694 2602 26071','no\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nno\nno'),(17,'质数筛','普及','数论',' 现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；\n','现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；','第一行两个数n ， k；\n接下来k行，每行一个数x；\n1 ≤ n,x ≤ 10⁶;\n1 ≤ k ≤ 100;','一共k行，yes或no；','5 5\n1 2 3 4 5','5 5\n1 2 3 4 5',1000,128,1,'5000 100\n9692 7348 7687 21293 2124 11113 31255 10160 19695 8771 9599 23244 25555 23589 20077 26000 5923 6819 4077 5983 22275 12891 15608 17638 31932 20872 23725 25425 18713 5332 15326 25535 8721 24174 14286 25331 21413 9053 9785 332 22540 8980 32405 30455 27406 15686 10392 14435 27822 23035 5114 16117 22283 6116 32124 18942 19336 13547 1321 11242 31531 25871 31196 30650 28227 2927 32258 8884 28494 2468 27041 28248 7449 6484 3482 11927 26665 25604 15403 16448 32602 19758 15031 17339 28614 8852 202 28665 31720 9939 26712 4523 28162 10811 13125 2738 27067 9694 2602 26071','no\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nno\nno\nno'),(18,'质数-min25筛','提高','数论',' 现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；\n','现在给出两个数n和k；\n有k次询问，每次一个数x；\n若x为质数且小于等于n，则输出：yes；\n否则输出：no；','第一行两个数n ， k；\n接下来k行，每行一个数x；\n1 ≤ n,x ≤ 10⁶;\n1 ≤ k ≤ 100;','一共k行，yes或no；','5 5\n1 2 3 4 5','5 5\n1 2 3 4 5',1000,128,1,'5000 100\n9692 7348 7687 21293 2124 11113 31255 10160 19695 8771 9599 23244 25555 23589 20077 26000 5923 6819 4077 5983 22275 12891 15608 17638 31932 20872 23725 25425 18713 5332 15326 25535 8721 24174 14286 25331 21413 9053 9785 332 22540 8980 32405 30455 27406 15686 10392 14435 27822 23035 5114 16117 22283 6116 32124 18942 19336 13547 1321 11242 31531 25871 31196 30650 28227 2927 32258 8884 28494 2468 27041 28248 7449 6484 3482 11927 26665 25604 15403 16448 32602 19758 15031 17339 28614 8852 202 28665 31720 9939 26712 4523 28162 10811 13125 2738 27067 9694 2602 26071','一共k行，yes或no；'),(31,'字符串内找字符串-难度提高版本','入门','字符串','一个字符串YWWYWL中包含了两个字符串WYL，分别为第 2 4 6 位和第3 4 6 位。\n\n现给定字符串，问按照上述规则，一共包含了多少个字符串WYL？\n\n给定的字符串只包含W,Y,L三种字母。\n','一个字符串YWWYWL中包含了两个字符串WYL，分别为第 2 4 6 位和第3 4 6 位。\n\n现给定字符串，问按照上述规则，一共包含了多少个字符串WYL？\n\n给定的字符串只包含W,Y,L三种字母。\n','一行，一个字符串S。\n1<=len(s)<=1e5','一共包含了多少个字符串WYL\n且因为结果可能比较大，请输出对 1000000007 取余数的结果。','YWWYWL','YWWYWL',1000,128,1,'',''),(32,'快速排序','入门','排序','','这一天cg写了一个卡迪亚酒店客户端，客户端的数据是一张由用户名s，密码m，性别x，电话h组成的表，他想以用户的用户名为基准进行一下排序,短的在前,同样长度按照字典序小的在前，同用户名先输入的在前面。但是曹哥太忙了所以找你帮忙写一下数据处理。','n分数据\n1<=n<=106\n以下n行 为 s m x h\n1<= s.length <=20\n1<= m.length <=20\n1<= x.length <=20\n1<= h.length <=20','根据用户名排序规则排序后输出','5\ntd1336065617 1336065617 n 13766949653\n1336065617 1336065617 nc 137\nad1336065617 1336065617 na 111\n03360651778 1 9 8\n1 1 1 1','5\ntd1336065617 1336065617 n 13766949653\n1336065617 1336065617 nc 137\nad1336065617 1336065617 na 111\n03360651778 1 9 8\n1 1 1 1',1000,128,1,'5\ntd1336065617 1336065617 n 13766949653\n1336065617 1336065617 nc 137\nad1336065617 1336065617 na 111\n03360651778 1 9 8\n1 1 1 1','1 1 1 1\n1336065617 1336065617 nc 137\n03360651778 1 9 8\nad1336065617 1336065617 na 111\ntd1336065617 1336065617 n 13766949653'),(33,'归并排序','入门','排序','','给你N个整数，请你从小到大排序。','第一行，一个整数N\n1leq N leq 100000\n第二行,N个整数。\n$ 1 leq a_{i} leq 10000 $','输出排序好的数列。','10\n1 3 9 2 1 6 5 4 1 8','10\n1 3 9 2 1 6 5 4 1 8',1000,128,1,'100\n4255 285 8818 5207 9194 7420 70 2230 1672 5965 5101 3956 220 7867 5512 5177 2329 2043 8628 9759 9736 4595 111 7966 4761 1296 7608 56 3244 3331 6135 7175 7410 1723 8685 9603 1616 6953 621 8 2005 5792 7499 3431 4700 9116 8099 5068 6340 4404 3565 4801 1581 9011 2096 1056 309 2643 7333 814 4085 5947 3278 1271 2422 235 7718 7492 7367 164 5306 1124 6787 574 1817 5722 2239 516 3944 4675 9522 3219 7864 9611 1176 9635 7708 5873 3928 2181 9750 1703 5444 1502 5794 1134 624 4466 8789 5058','8 56 70 111 164 220 235 285 309 516 574 621 624 814 1056 1124 1134 1176 1271 1296 1502 1581 1616 1672 1703 1723 1817 2005 2043 2096 2181 2230 2239 2329 2422 2643 3219 3244 3278 3331 3431 3565 3928 3944 3956 4085 4255 4404 4466 4595 4675 4700 4761 4801 5058 5068 5101 5177 5207 5306 5444 5512 5722 5792 5794 5873 5947 5965 6135 6340 6787 6953 7175 7333 7367 7410 7420 7492 7499 7608 7708 7718 7864 7867 7966 8099 8628 8685 8789 8818 9011 9116 9194 9522 9603 9611 9635 9736 9750 9759'),(34,'逆序对的数量','普及','树状数组,归并排序','','\n给定一个长度为 n\n\n的整数数列，请你计算数列中的逆序对的数量。\n\n逆序对的定义如下：对于数列的第 i\n个和第 j 个元素，如果满足 i<j 且 a[i]>a[j]，则其为一个逆序对；否则不是。','第一行包含整数 n，表示数列的长度。\n\n第二行包含 n 个整数，表示整个数列。\n\n1≤n≤100000，\n数列中的元素的取值范围 [1,109]。','输出一个整数，表示逆序对的个数。','6\n2 3 4 5 6 1\n','6\n2 3 4 5 6 1\n',1000,128,1,'6\n2 3 4 5 6 1\n','5'),(35,'数的范围','入门','二分','','给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。\n\n对于每个查询，返回一个元素 k\n的起始位置和终止位置（位置从 0 开始计数）。\n\n如果数组中不存在该元素，则返回 -1 -1。','第一行包含整数 n 和 q ，表示数组长度和询问个数。\n\n第二行包含 n 个整数（均在 1∼10000 范围内），表示完整数组。\n接下来 q 行，每行包含一个整数 k ，表示一个询问元素。\n\n1≤n≤100000\n1≤q≤10000\n1≤k≤10000\n','共 q 行，每行包含两个整数，表示所求元素的起始位置和终止位置。\n\n如果数组中不存在该元素，则返回 -1 -1。','6 3\n1 2 2 3 3 4\n3\n4\n5','6 3\n1 2 2 3 3 4\n3\n4\n5',128,1000,1,'6 3\n1 2 2 3 3 4\n3\n4\n5','3 4\n5 5\n-1 -1'),(36,'子矩阵的和','普及','二维前缀和','','输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x1,y1,x2,y2 ，表示一个子矩阵的左上角坐标和右下角坐标。\n\n对于每个询问输出子矩阵中所有数的和。','第一行包含三个整数 n，m，q 。\n\n接下来 n 行，每行包含 m 个整数，表示整数矩阵。\n\n接下来 q 行，每行包含四个整数 x1,y1,x2,y2，表示一组询问。\n1≤n,m≤1000,\n1≤q≤200000,\n1≤x1≤x2≤n,\n1≤y1≤y2≤m,\n−1000≤矩阵内元素的值≤1000','共 q 行，每行输出一个询问的结果。','3 4 3\n1 7 2 4\n3 6 2 8\n2 1 2 3\n1 1 2 2\n2 1 3 4\n1 3 3 4','3 4 3\n1 7 2 4\n3 6 2 8\n2 1 2 3\n1 1 2 2\n2 1 3 4\n1 3 3 4',128,1000,1,'3 4 3\n1 7 2 4\n3 6 2 8\n2 1 2 3\n1 1 2 2\n2 1 3 4\n1 3 3 4','17\n27\n21'),(37,'最长连续不重复子序列','普及','双指针','','给定一个长度为 n 的整数序列，请找出最长的不包含重复的数的连续区间，输出它的长度。','第一行包含整数 n 。\n\n第二行包含 n 个整数（均在 0∼105 范围内），表示整数序列。\n1≤n≤105','共一行，包含一个整数，表示最长的不包含重复的数的连续区间的长度。','5\n1 2 2 3 5','5\n1 2 2 3 5',128,1000,1,'5\n1 2 2 3 5','3'),(38,' 欧拉函数','普及','数论','','给定 n 个正整数 ai，请你求出每个数的欧拉函数','第一行包含整数 n 。\n接下来 n 行，每行包含一个正整数 ai 。\n1≤n≤100,\n1≤ai≤2×109','输出共 n 行，每行输出一个正整数 ai 的欧拉函数。\n','3\n3\n6\n8','3\n3\n6\n8',128,1000,1,'3\n3\n6\n8','2\n2\n4'),(39,'Kruskal算法求最小生成树','提高','最小生成树','','给定一个 n 个点 m 条边的无向图，图中可能存在重边和自环，边权可能为负数。\n\n求最小生成树的树边权重之和，如果最小生成树不存在则输出 impossible。\n\n给定一张边带权的无向图 G=(V,E) ，其中 V 表示图中点的集合，E 表示图中边的集合，n=|V|，m=|E| 。\n由 V 中的全部 n 个顶点和 E 中 n−1 条边构成的无向连通子图被称为 G 的一棵生成树，其中边的权值之和最小的生成树被称为无向图 G 的最小生成树。','第一行包含两个整数 n 和 m 。\n\n接下来 m 行，每行包含三个整数 u,v,w，表示点 u 和点 v 之间存在一条权值为 w 的边。\n1≤n≤105,\n1≤m≤2∗105,\n图中涉及边的边权的绝对值均不超过 1000。','共一行，若存在最小生成树，则输出一个整数，表示最小生成树的树边权重之和，如果最小生成树不存在则输出 impossible。','4 5\n1 2 1\n1 3 2\n1 4 3\n2 3 2\n3 4 4\n','4 5\n1 2 1\n1 3 2\n1 4 3\n2 3 2\n3 4 4\n',128,1000,1,'4 5\n1 2 1\n1 3 2\n1 4 3\n2 3 2\n3 4 4\n','6'),(40,'Dijkstra求最短路 ','提高','图论,最短路','','给定一个 n 个点 m 条边的有向图，图中可能存在重边和自环，所有边权均为正值。\n\n请你求出 1 号点到 n 号点的最短距离，如果无法从 1 号点走到 n 号点，则输出 −1。','第一行包含整数 n 和 m 。\n\n接下来 m 行每行包含三个整数 x,y,z，表示存在一条从点 x 到点 y 的有向边，边长为 z 。\n1≤n≤500,\n1≤m≤105,\n图中涉及边长均不超过10000。','输出一个整数，表示 1 号点到 n 号点的最短距离。\n\n如果路径不存在，则输出 −1 。','3 3\n1 2 2\n2 3 1\n1 3 4','3 3\n1 2 2\n2 3 1\n1 3 4',128,1000,1,'3 3\n1 2 2\n2 3 1\n1 3 4','3'),(41,'寒假购物','普及','01背包,动态规划','无','众所周知放假早的学校,早已开始寒假，这一天同学AC带着一个购物车来到超市。\n这个购物车很神奇，他装东西只需要考虑体积而不用考虑形状。\n这个购物车的容积为v。\n这个超市有n种商品,每种的体积为t,价钱为w。\nAC想看看这个购物车装到极限 最多能花掉多少钱 。\n但是他也不想浪费 所以每个东西只装一件 装不满就算了（商品种类少得可怜）。','第一行两个整数1<=n<=1000,1<=v<=1000\n第二至n+2行有两个整数1<=t<=1000,1<=w<=1000','输出一个数字代表花掉的钱','5 6             \n1 2\n2 4\n3 4\n4 5 \n5 6','5 6             \n1 2\n2 4\n3 4\n4 5 \n5 6',1000,128,1,'10 100\n7 5\n1 4\n3 7\n6 8\n7 7\n5 1\n3 9\n10 7\n5 10\n4 3','61'),(42,'小雪买巧克力','入门','枚举','题目背景\n众所周知，小雪喜欢吃巧克力。巧克力越苦她越开心，越甜她越伤心。她会得到一些钱来购买巧克力。\n注：假设浓度的部分为苦，而剩余部分都为甜。\n例如：65%浓度的巧克力苦度就为65，甜度就为35，小雪可以得到的开心值就是30。\n\n题目描述\n已知小雪这一天的生活费与若干不同浓度，不同价格的巧克力。现在需要你帮助小雪算出该如何选择巧克力的浓度来使自己在这一天最开心。\n巧克力的浓度与价格如下表：\n浓度(%) 	价格(元)\n65 	        20\n75 	        25\n85 	        28\n\n\n总开心值相同的情况下 优先购买浓度低的','','一行一个n，表示小雪这一天有多少钱。\n对于70%的数据20≤n≤1000;\n对于100%的数据20≤n≤20000;','一共三行；\n分别为各浓度巧克力所购买的数量；\n按浓度由大到小输出。\n','100','100',128,1000,1,'996','85%:35\n75%:0\n65%:0'),(43,'想不到出什么的xmy，出了个极简版本机器人','入门','字符串','因为想模拟天梯赛不想出难题，还不想重复所以xmy很脑壳痛。想不到怎么出简单又有意思的题。\n所以xmy水了一会江莉XCPC民间交流群。\n发了几次来只清楚。想了想，算了出个类似于机器人的极简版吧。','xmy找你帮他写一个对话机器人。\n这个机器人需要接收一个，N组对话的对话集合进行初始化。\n每组对话有两个字符串s1和s2，以空格分隔。\n保证s1和s2在对话集中的唯一性。\n然后会进行M次测试。\n每次测试输入一个字符串S，如果这个字符串S有预设好的对话就输出预设好的对话。如果没有请输出jlstxdy。\n比如输入的S在预设中是s1就输出对应的s2，在预设中S是s2就输出s1。\n对话字符串内不包含空格','第一行两个整数N M\n1leq N,M leq 1000\n以下N行每行两个以空格分隔的字符串s1和s2\n1leq Length（s1）, Length（s2）leq1000\n以下M行每行一个字符串S\n1leq Length（S） leq1000','输出M行\n对应对话结果','5 5\nqcjj zngg\njzgg hj\nHeltion jiangly\nwm ml\nemmm mme\nemmm\ne\njzgg\njiangly\nqcjj','5 5\nqcjj zngg\njzgg hj\nHeltion jiangly\nwm ml\nemmm mme\nemmm\ne\njzgg\njiangly\nqcjj',128,1000,1,'10 10\na b\nc d\ne f\ng h\no p\nq r\ns j\ni l\nm n\nx y\nx\ny\nn\nl\np\no\na\nc\ne\nh','y\nx\nm\ni\no\np\nb\nd\nf\ng'),(44,'考试信息','入门','快速排序','无','期末考试了，老师给了你一个数据集，里面包含了n名同学的考试成绩。\n这个数据集每行包含一个学生的信息，信息包含:学号(id),专业课总分(pcts),其他课总分(tocts)。\n请你计算出每名同学的总分(ts)后。\n按照以下排序规则，计算出排名(pm)后的名单。\n\n1.总分高的排名靠前。\n2.总分相同的，专业课总分高的排名靠前。\n3.专业课总分和其他课总分都相同的并列排名，学号小的在名单的前面。\n注:学号唯一 不可能有两个人学号相同\n\n然后根据排名好的名单，输出学生信息。','第一行输入一个整数 n\n\n以下n行 每行三个整数 id pcts tocts\n','输出n行 每行五个整数 pm id pcts tocts ts\n例:\n1 1200919207 1000 1000 2000\n2 1200919201 999 1000 1999','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800',128,1000,1,'5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','1 1200919201 1000 999 1999\n1 1200919204 1000 999 1999\n2 1200919203 1000 998 1998\n3 1200919205 1100 800 1900\n4 1200919202 900 1000 1900'),(45,'考试信息','入门','快速排序','无','期末考试了，老师给了你一个数据集，里面包含了n名同学的考试成绩。\n这个数据集每行包含一个学生的信息，信息包含:学号(id),专业课总分(pcts),其他课总分(tocts)。\n请你计算出每名同学的总分(ts)后。\n按照以下排序规则，计算出排名(pm)后的名单。\n\n1.总分高的排名靠前。\n2.总分相同的，专业课总分高的排名靠前。\n3.专业课总分和其他课总分都相同的并列排名，学号小的在名单的前面。\n注:学号唯一 不可能有两个人学号相同\n\n然后根据排名好的名单，输出学生信息。','第一行输入一个整数 n\n\n以下n行 每行三个整数 id pcts tocts\n','输出n行 每行五个整数 pm id pcts tocts ts\n例:\n1 1200919207 1000 1000 2000\n2 1200919201 999 1000 1999','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800',128,1000,1,'5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','1 1200919201 1000 999 1999\n1 1200919204 1000 999 1999\n2 1200919203 1000 998 1998\n3 1200919205 1100 800 1900\n4 1200919202 900 1000 1900'),(46,'考试信息','入门','快速排序','无','期末考试了，老师给了你一个数据集，里面包含了n名同学的考试成绩。\n这个数据集每行包含一个学生的信息，信息包含:学号(id),专业课总分(pcts),其他课总分(tocts)。\n请你计算出每名同学的总分(ts)后。\n按照以下排序规则，计算出排名(pm)后的名单。\n\n1.总分高的排名靠前。\n2.总分相同的，专业课总分高的排名靠前。\n3.专业课总分和其他课总分都相同的并列排名，学号小的在名单的前面。\n注:学号唯一 不可能有两个人学号相同\n\n然后根据排名好的名单，输出学生信息。','第一行输入一个整数 n\n\n以下n行 每行三个整数 id pcts tocts\n','输出n行 每行五个整数 pm id pcts tocts ts\n例:\n1 1200919207 1000 1000 2000\n2 1200919201 999 1000 1999','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800',128,1000,1,'5\n1200919204 1000 999\n1200919202 900 1000\n1200919203 1000 998\n1200919201 1000 999\n1200919205 1100 800','1 1200919201 1000 999 1999\n1 1200919204 1000 999 1999\n2 1200919203 1000 998 1998\n3 1200919205 1100 800 1900\n4 1200919202 900 1000 1900'),(47,'签到题 你信吗 我信了','普及','并查集','','n 个小朋友正在做一个游戏，每个人要分享一个自己的小秘密。\n每个小朋友都有一个 1 到 n 的编号，编号不重复。\n为了让这个游戏更有趣，老师给每个小朋友发了一张卡片，上面有一个 1 到 n 的数字，每个数字正好出现一次。\n每个小朋友都将自己的秘密写在纸上，然后根据老师发的卡片上的数字将秘密传递给对应编号的小朋友。如果老师发给自己的数字正好是自己的编号，这个秘密就留在自己手里。\n小朋友们拿到其他人的秘密后会记下这个秘密，老师会再指挥所有小朋友将手中的秘密继续传递，仍然根据老师发的卡片上的数字将秘密传递给对应编号的小朋友。\n这样不断重复 n 次。\n现在，每个小朋友都记下了很多个秘密。\n老师现在想找一些小朋友，能说出所有秘密，请问老师最少要找几个小朋友？','输入的第一行包含一个整数 n。\n第二行包含 n 个整数 a[1], a[2], …, a[n]，相邻的整数间用空格分隔，分别表示编号 1 到 n 的小朋友收到的数字。\n\n评测用例规模与约定\n对于所有评测用例，2 <= n <= 100000','输出一行包含一个整数，表示答案。','6\n2 1 3 5 6 4','6\n2 1 3 5 6 4',128,1000,1,'6\n2 1 3 5 6 4','3'),(48,'MeUmy的海底捞抽奖旅程','提高','最短路,离散化,字符串哈希化','',' 这一天咩栗与大白狗去吃海底捞，海底捞服务员告诉他们，海底捞推出来一个新的活动。\n海底捞给他们提供了一张地图.\n上面包含了N家海底捞，编号从0到N-1,和M条可以连接两个海底捞店的路，和每家店的开业时间为t。（出题人没见过只能单向的路）\n并且提供了一条很长很长的字符串S和ST条比较短的字符串Si。短的字符串是从0到ST-1编号的。\n然后让呜米说Q次，每次说三个数字 ,第一个数字代表店 x ,第二个数字代表店 y，第三个数字代表时间 t 。\n求出 t 时间 x 店到 y 店之间最短的路径长度LEN，用LEN%ST的结果取出编号相同的Si字符，Si字符串在长字符串S内出现的次数，会被记录下来。\n如果 t 时间的时候x店或者y店没有开业或者t时间x店与y店还不能互通，就视为不能互相到达,会记录下-ST。(负的ST)\n需要中转才能互通或者可以通过中转减少最短距离的情况下，只能在t 时间以及之前，已经开业的店可以进行中转。\n最后把记录下的数字加起来，如果大于R就可以免单。\n请问记录下的数字加起来是多少，能不能免单？\n\n注:\naaa\naa\n算aa出现两次\n\nababa\naba\n算aba出现两次\n而且S和Si只存在小写字母','第一行五个整数 N M ST R Q\n第二行N个整数 t  保证t不降 \n\n第三行一个字符串S\n接下来ST条字符串Si \n接下来M行每行三个整数x,y,w ( x到y距离w)\n接下来Q行每行三个整数x,y,t  保证t不降\n','输出两行\n第一行能不能免单 能YES 不能NO\n第二行一个整数 记录下的数字加起来是多少','4 5 5 20 4\n1 2 3 4\naaaaaaaaa\na\na\na\na\na\n2 3 1\n0 2 1\n2 1 4\n0 3 5\n3 1 2\n0 1 2\n2 1 3\n0 1 3\n0 1 4','4 5 5 20 4\n1 2 3 4\naaaaaaaaa\na\na\na\na\na\n2 3 1\n0 2 1\n2 1 4\n0 3 5\n3 1 2\n0 1 2\n2 1 3\n0 1 3\n0 1 4',10,128,1,'4 5 5 20 4\n1 2 3 4\naaaaaaaaa\na\na\na\na\na\n2 3 1\n0 2 1\n2 1 4\n0 3 5\n3 1 2\n0 1 2\n2 1 3\n0 1 3\n0 1 4','YES\n22'),(49,'云哥教你学数学！','入门','数论','','今天云哥又在算法群里吐槽自己菜了，虽然群巨们都笑着答应，但实则全部都在膜拜云哥。突然有一个小萌新遇到一个这样的问题来问云哥：\n\n       众所周知丑数是非常神奇的数字，虽然他叫丑数，但是他看起来就特别的美妙。现在我们需要从小到大找到第a个和第b个丑数。（a<b）分别设为f(1)和f(2)。现在我们需要求的f(n)也是一个美妙的数字，已知f(x)=2*f(x-1)+3*f(x-2)   (x>2),求f(n)到底为多少，答案对mod=1e9+7取模。\n\n       云哥笑着拍了拍小萌新的脑袋，说着“wdnmx”。\n\n（丑数指只由分解后只由若干个2，3,5相乘。默认1为第一个丑数）','第一行输入三个整数a,b,n(1<=a<=b<=5*104,1<=n<=109)','输出f(n)对mod取余的结果（mod=1e9+7）','1 2 3','1 2 3',128,1000,1,'9625 21829 998789618','41676643'),(50,'群友们在排列数字','入门','DFS','','群友们在玩一个游戏,共n个人在玩 每个人要在0-(n-1)中选一个数，注意每个数只能选择一次，\n然后按照先后选择顺序拼成一个数,计算组成的数字是否可以整除k，\n群友们想知道，如果选择方案不重复，最多有多少种情况可以整除k？\n如果不可能整除k请输出-1；','第一行输入两个正整数 n,k\n1<=n<=10,1<=k<=107\n\n','输出结果','2 1','2 1',128,1000,1,'10 1','3628800'),(51,'比赛开始了清楚姐姐喊了一句:签到了签到了','入门','模拟','','比赛开始了清楚姐姐喊了一句:签到了签到了 选手们纷纷开始签到,现在给出n个数字代表选手们签到所用秒数 请给出第几个选手最先签到。同秒数先输入的算快。\n（不会吧 不会吧 不会有人用牛客不知道清楚姐姐吧）','第一行输入一个整数n\n1<=n<=10000\n第二行输入n个整数s\n0<=s<=1000','一个数','5\n5 3 2 4 1','5\n5 3 2 4 1',128,1000,1,'1000\n卡牌收集','入门','DFS','','小A收集了n张卡牌，每张卡牌都可能有指定的组合。\n如果a和b可以组合，b和c也可以组合那么abc就是一个组合。\n小A给每张卡牌进行了编号，他知道哪两张卡牌可以配对,共m对配对信息，因为小A这些信息存了很长时间，所以可能有重复的。\n但是卡牌太多了请你帮他算一算 卡牌1在多少张卡牌组成的组合里面?','1<=n<=2000000\n0<=m<=1000000\n1<=a<=2000000\n1<=b<=2000000\n输入为m+1行\n第一行两个整数为n m\n以下m行为a b','输出一个整数 卡牌1在多少张卡牌组成的组合里面','10 5\n1 2\n3 4\n5 6\n2 3\n2 6','10 5\n1 2\n3 4\n5 6\n2 3\n2 6',128,1000,1,'1000 50\n87 941\n45 83\n246 541\n742 853\n229 429\n90 418\n654 859\n649 1000\n625 788\n125 287\n564 630\n665 916\n645 801\n376 620\n161 548\n50 228\n410 855\n384 579\n383 992\n649 718\n523 630\n84 285\n125 139\n127 870\n17 758\n325 587\n360 367\n282 530\n948 972\n561 639\n600 810\n63 892\n701 712\n727 772\n74 542\n92 330\n916 933\n186 199\n209 887\n310 994\n400 425\n211 590\n611 877\n310 906\n263 549\n302 641\n84 948\n595 639\n63 721\n238 843','1'),(53,'issue与lifehappy给学生分组','入门','贪心','','issue与lifehappy在给学生分组 现在他们手里有一组n分学生量化好的数据a 这份数据是一个数字，代表学生的大致实力\n他们要给学生分成m组并且要求总实力和的最大值最小（ccpc抢名额战略，分散一点）\n不过学生们已经拉帮结派的排好队了 所以 issue与lifehappy只能选取这组数据中的连续队列。','第一行 n m n个学生 分成m组\n1<=m<=n<=106\n第二行为n正整数an\na1 a2 .....an (0<=ai<=1011) 1<=i<=n(保证最终结果在ull内）','输出分组后总实力最大值的最小','5 3\n1 8 9 4 2','5 3\n1 8 9 4 2',128,1000,1,'1000 132\n978 7984 3008 8979 8513 3922 2993 6165 5379 7641 3079 6201 9790 4448 5578 1902 1257 9590 2118 9244 3768 3242 884 9930 7065 7576 7115 5681 4687 6082 8230 625 2380 9683 3367 3731 2341 1488 1740 4271 81 3504 6834 7342 7266 4541 5480 7346 1767 5851 6965 4309 2561 6505 1836 9695 9828 3974 8942 5708 8336 7462 1456 1774 8289 1765 8095 2207 7892 3499 5986 8313 4140 1936 9712 5529 3123 9234 1729 2689 2532 6580 1641 1886 9961 6585 6114 4313 144 6914 7384 6097 8132 5941 5707 5657 1961 5423 1809 4286 2023 8202 9179 8909 8363 9330 9657 7890 6938 6916 5199 1811 1176 2633 74 4542 921 9586 4670 817 9573 6068 1618 5817 2593 4150 8511 6188 2619 5640 8820 7994 5014 1254 5309 6737 599 5869 1541 2465 6175 7230 7306 5889 4059 7585 8656 4063 2744 715 4537 1837 6715 4899 4979 3050 8128 2129 7938 7342 992 2888 4832 6106 9497 2951 1682 3615 7433 5530 4397 351 7882 614 2777 1697 6277 1572 708 4216 6160 2589 522 7302 6138 2360 7732 5197 7960 4560 2606 8695 2081 1433 8014 7846 3223 8228 6145 1422 1415 3313 9720 5250 9763 8756 6884 4380 4429 2987 6477 2449 3175 7999 6281 1044 1145 3962 4299 6106 3203 3528 1674 9886 6851 3793 7924 4422 6297 9429 2627 9334 9369 9705 398 8387 6337 6913 5443 3611 3852 6782 372 5426 4758 6074 479 8656 9313 3474 1570 1610 5623 1300 383 8925 2241 9048 9357 3491 6711 3540 2831 7663 4089 8986 4552 203 8318 517 351 7428 1386 7860 9264 1796 5925 1654 627 9632 1418 5687 3361 1219 1038 6474 52 3883 9458 4535 2958 6387 4809 7718 1773 6785 9870 9229 8925 4816 7696 2407 1279 9473 2607 454 8649 3885 2348 1450 2013 5230 5276 9186 4878 9199 1454 594 1473 8432 8445 3078 145 9199 8823 998 5013 2676 9743 6762 2726 8332 2656 64 6747 7912 9059 2587 2023 6006 9283 9583 3238 3376 9135 8043 6563 724 159 9845 9822 9077 651 9596 957 4463 3801 7050 6960 4144 5477 6168 6553 3301 5430 1143 284 7587 9326 9468 1507 1688 9873 2044 6213 6528 8282 121 7480 2956 6635 5051 5284 2384 3492 8962 9594 3932 982 9722 4261 61 5880 1360 9008 1493 4441 6869 1497 2329 5191 3937 1684 8137 5152 2233 626 9973 6743 7076 9155 5037 9945 4443 4122 522 8656 2607 8257 5804 5655 4735 7949 7668 7423 6202 4546 1123 4930 9713 3306 2641 9943 6017 1298 1778 5734 6496 7782 135 7276 8821 46 9793 7040 893 3145 4027 1030 2988 7769 4729 3764 7985 8526 1499 6388 6653 88 2390 26 8484 6407 6325 8374 7829 8790 6556 7356 279 8456 7966 1378 3524 5536 9263 1689 4683 2471 732 2544 816 5882 2873 6373 7 5346 9995 2253 8625 2249 4712 2439 2166 7577 1244 4012 4212 3991 1790 873 902 5040 5553 9280 5912 7938 4703 3852 730 9998 1299 8324 3364 5581 550 6897 3210 1073 3357 8771 7359 9037 8416 8305 1614 1367 862 9120 3798 1965 1551 5031 1398 470 2282 2720 6202 6491 6585 304 1365 5238 7530 7771 624 8473 55 1106 177 8913 151 5662 6351 8157 1350 578 7861 1178 9779 4700 6245 1937 9129 924 6671 995 5905 4936 8402 7363 1829 2943 786 9941 5751 6253 6379 5862 5667 5422 901 2620 4547 4150 7352 4239 2274 2864 3810 8185 7123 6022 2231 4522 7027 2001 6264 5102 1468 7905 7543 883 9339 1551 3369 1941 7892 6177 973 1516 5348 8622 7245 9258 3544 6963 8675 1613 4700 8357 2542 4108 4854 4327 6228 8336 1429 2366 4361 8432 5156 9571 2449 5377 1699 1033 8131 2381 4248 7617 240 5060 6273 1834 5714 9201 1437 2796 1351 1535 5820 8135 1776 9515 6069 9591 8197 619 503 2939 8092 8863 449 2150 1898 2263 709 3109 1496 5718 5178 3219 3801 4118 370 1306 5756 3371 3660 1850 8509 3884 4811 5631 3873 9983 8390 3294 9122 5540 1632 5295 919 358 9195 1058 2295 8189 153 2923 4527 1415 1108 3296 6771 472 4943 8405 5922 5999 8476 5829 5997 9308 7295 2164 8600 4399 578 1187 9314 2498 8651 3364 6482 4650 539 4286 4466 9498 264 7971 2929 3320 3597 736 820 68 352 5156 2172 4630 8677 2405 686 4311 8113 8640 7598 499 1458 6687 9037 2286 4605 6192 1366 2325 1991 4723 4099 1158 488 868 2581 4754 1501 3322 5876 8545 5101 7631 3412 4583 3727 3522 472 7862 8554 9385 5451 8260 2684 5786 5117 2623 8991 7948 2954 1742 1129 2297 6834 601 9491 3815 5700 7884 6508 1416 2892 8471 2446 5326 2111 26 4850 4323 2580 8624 9120 2776 5846 9273 1514 4908 8167 8157 521 7920 2647 4573 3895 8440 4870 2188 6847 2436 2982 8190 8674 8576 9380 9343 6556 7321 6456 135 4406 4225 4186 6653 2301 613 5416 138 2498 7517 1526 3232 2659 515 9877 5803 6299 552 1431 9974 2422 9171 1458 8928 8119 9867 2803 7584 9117 7816 9269 167 4819 4149 9025 1702 7031 7048 7128 768 4094 276 7856 9121 4246 9727 2555 8190 7179 4768 7998 9407 4222 7116 1104 6667 7795 9089 2722 9315 5498 1666 2478 8689 1345 8212 9090 450 5928 3048 2431 2690 9285 1355 8077 1255 7176 202 466 577 977 1498 9843 8400 5009 6182 1001 6822 9023 1546 1416 2046 7516 544 956 4814 7608 7577 165 6505 9127 8543 3572 1368 6654 3192 8598 7530 1491 8941 801 5113 2196 4348 493 6255 3990 2475 3173 4281 417 8510 7726 2987 8969 1242 4215 8196 1761 9371 9057 3172 4907 4739 4048 4955 3155 1428 5155 4467 1981 8064 9857 1728 940 6735 7269 4743 2356 6145 8747 1085 8962 5524 5979 4578 107 3976 9174 4573 5858','39938'),(54,'qcjj想玩 I wanna','入门','数论','','    Qcjj最喜欢玩I wanna了，在I wanna中除了正常的路障之外，还会出现很多意想不到的飞行道具飞过来将你干掉。Qcjj为了更好的躲过这些飞行道具，需要统计他们出现的位置以及该位置出现的时间。但是这样太难了，心善的qcjj决定简化问题，我们将飞行道具变成不会动的苹果，苹果们每次攻击都会直接出现在攻击地带，这里也简化成一个矩形区域。每次攻击的苹果颜色都不相同，但同一次攻击的苹果颜色是相同的。\n\n    Qcjj会发出m次信息，第一种信息是qcjj又发现了一次新的攻击，第二种信息是qcjj询问可爱的巨巨们，目标矩形区域有多少次不同颜色苹果的攻击。（包含矩形边框）\n\n    这里为了简化每一次攻击的矩形范围，会给出该攻击的矩形区域右上顶点（x,y）,该矩形区域的左下顶点即为（f(x),f(y)） 其中f(n)函数代表 n的第二大约数 特别的，我们认为f(1)=1。','第一行输入qcjj发出信号的次数m\n随后m行每行第一个数为k\n当k=1时，代表qcjj发现了新的攻击，随后会输入两个整数x,y代表矩形区域的右上顶点。\n当k=2时，代表qcjj对你发出询问，随后会输入四个整数x1,y1,x2,y2其中(x1,y1)代表询问区域的左下顶点，(x2,y2)代表询问区域的右上顶点。\n其中1<=m<=106,k为1或2,1<=x,y,x1,x2,y1,y2<=1*103 ','对于每一个k=2的操作，输出一行数字代表该矩形区域内有多少种不同苹果颜色的攻击。','16\n1 891 80\n2 101 168 583 281\n1 700 715\n2 25 443 263 782\n1 846 925\n1 238 595\n2 352 590 394 731\n2 895 771 926 945\n1 463 816\n1 830 773\n1 919 545\n2 137 727 588 966\n2 421 935 646 949\n2 837 46 860 960\n2 740 383 812 715\n2 45 757 168 980','16\n1 891 80\n2 101 168 583 281\n1 700 715\n2 25 443 263 782\n1 846 925\n1 238 595\n2 352 590 394 731\n2 895 771 926 945\n1 463 816\n1 830 773\n1 919 545\n2 137 727 588 966\n2 421 935 646 949\n2 837 46 860 960\n2 740 383 812 715\n2 45 757 168 980',128,1000,1,'16\n1 891 80\n2 101 168 583 281\n1 700 715\n2 25 443 263 782\n1 846 925\n1 238 595\n2 352 590 394 731\n2 895 771 926 945\n1 463 816\n1 830 773\n1 919 545\n2 137 727 588 966\n2 421 935 646 949\n2 837 46 860 960\n2 740 383 812 715\n2 45 757 168 980','0\n0\n1\n0\n3\n0\n3\n3\n1'),(55,'关注牛客竞赛喵，关注牛客竞赛谢谢喵','','','','关注牛客竞赛喵，关注牛客竞赛谢谢喵\n牛客竞赛 1w粉兰子女装 谢谢喵\n平时还有好哥哥视频讲解牛客系列赛题目\n请输出 牛客竞赛的b站主页\nhttps://space.bilibili.com/414380929\n\n','无','https://space.bilibili.com/414380929','','',128,1000,1,'','https://space.bilibili.com/414380929');
/*!40000 ALTER TABLE `examination_questions` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:51
-- ************************************************************
--
-- close fk
--
-- skip


-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `Account_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '账户id',
  `Account_status` int(11) NOT NULL DEFAULT '0' COMMENT '帐号状态0 未验证 1正常 2被限制',
  `Account_type` int(11) NOT NULL DEFAULT '1' COMMENT '帐号类型',
  `username` varchar(20) NOT NULL DEFAULT '' COMMENT '用户名',
  `password` varchar(200) NOT NULL DEFAULT '' COMMENT '密码',
  `mailbox` varchar(50) NOT NULL DEFAULT '' COMMENT '邮箱',
  `School_Unit` varchar(60) DEFAULT '' COMMENT '学校/单位',
  `Student_number_teacher_number` varchar(30) DEFAULT '' COMMENT '学号/教师编号',
  `nickname` varchar(30) DEFAULT '' COMMENT '昵称',
  `rating` int(11) DEFAULT '1500' COMMENT 'rating分',
  `avatar` varchar(255) DEFAULT '' COMMENT '头像',
  `name` varchar(255) DEFAULT '' COMMENT '姓名',
  PRIMARY KEY (`Account_id`),
  UNIQUE KEY `username` (`username`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,1,3,'td1336065617','738A72AC964A820D5E311C7D6B500D79','1336065617@qq.com','哈尔滨华德学院','1200919207','td1336065617',1500,'aaaaaaa','辛牧云'),(3,1,1,'cs1336065617','cs1336065617','1336065617@qq.com','','','',1500,'',''),(7,1,1,'13766949653','13766949653','13766949653@qq.com','','','',1500,'',''),(9,1,2,'td13360656171','td13360656171','td13360656171@qq.com','哈尔滨华德学院','1200919207','教师测试',1500,'','辛牧云'),(10,1,1,'hdacm2020','hdacm2020','hdacm2020@edu.com','哈尔滨华德学院ACM','1200919207','用户10',1500,'','辛牧云'),(11,1,2,'hdacm2021','hdacm2021','hdacm2021@hd.edu.com','测试','1200919207','用户11',1500,'','辛牧云'),(12,2,2,'hdacm20203','hdacm20203','hdacm20203@qq.com','hdacm20203','hdacm20203','用户12',1500,'','辛牧云2'),(13,2,2,'hdacm2020c','hdacm2020c','hdacm2020c@qq.com','hdacm2020c','hdacm2020c','用户13',1500,'','hdacm2020c'),(14,1,1,'td13360656172','738A72AC964A820D5E311C7D6B500D79','td1336065617@qq.com','','','',1500,'',''),(15,0,2,'hdacm2020d','5D95396418801CD3242F3CC6B4A93B3B','hdacm2020d@edu.com','hdacm2020d','hdacm2020d','',1500,'','hdacm2020d'),(16,0,2,'hdacm2020e','8A7590FD8BC0E42672F9D921ED186A08','hdacm2020e@edu.com','hdacm2020e','hdacm2020e','',1500,'','hdacm2020e'),(17,0,2,'hdacm2020f','BC0C6DB62CC6CAE1B129D2C4BECC2964','hdacm2020f@qq.com','hdacm2020f','hdacm2020f','',1500,'','hdacm2020f'),(18,0,2,'hdacm2020g','C052D629D96789C057B62645CA1FD1D7','hdacm2020g@edu.com','hdacm2020g@edu.com','hdacm2020g@edu.com','',1500,'','hdacm2020g@edu.com'),(19,0,2,'hdacm2020h','4357F7616098E6911C31DB966F8AEC02','hdacm2020h@edu.com','hdacm2020h','hdacm2020h','',1500,'','hdacm2020h'),(20,0,2,'hdacm2020p','0A0515A0670FB727E773AC6A5B59B6EF','hdacm2020p@qq.com','hdacm2020p','hdacm2020p','',1500,'','hdacm2020p'),(21,0,2,'hdacm2020q','D6B083EBDEE61DFBDFB369123B76D1B7','hdacm2020q@qq.com','hdacm2020q','hdacm2020q','',1500,'','hdacm2020q'),(22,0,2,'hdacm2020w','0587932EFE99ED274EB2683FB65EE84B','hdacm2020w@qq.com','hdacm2020w','hdacm2020w','',1500,'','hdacm2020w'),(23,0,2,'hdacm2020we','1B9FFD458A2833F8BB20968EC60A0020','hdacm2020we@qq.com','hdacm2020we','hdacm2020we','',1500,'','hdacm2020we'),(24,0,2,'hdacm2020wo','F20B9D1DB443AF1F9EE2A67AE4E29E95','hdacm2020wo@qq.com','hdacm2020wo','hdacm2020wo','',1500,'','hdacm2020wo'),(25,0,2,'hdacm2020woe','CB287CFF964B164E5BBAE1ABB4A4A2FC','hdacm2020woe@qq.com','hdacm2020woe','hdacm2020woe','',1500,'','hdacm2020woe'),(26,1,1,'td13360656179','CB9E89874F073BBC3FFE2EC72B4ED281','td13360656179@qq.com','','','',1500,'','');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:52
-- MySQL dump 10.13  Distrib 5.7.35, for Linux (x86_64)
--
-- Host: 9.236.36.31    Database: DataStructPlayground_Data
-- ------------------------------------------------------
-- Server version	5.7.18-cynos-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping events for database 'DataStructPlayground_Data'
--

--
-- Dumping routines for database 'DataStructPlayground_Data'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-15 22:52:54

--
-- Dumping views for database DataStructPlayground_Data
--
